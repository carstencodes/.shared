["pyproject.toml".tool.git-cliff.changelog]
header = "# Changelog\n\nAll notable changes to this project will be documented in this file.\n\n"
body = "{% if version %}##  Changelog for release {{ version | trim_start_matches(pat=\"v\") }}\n{% else %}## [unreleased]\n{% endif %}Released on {{ timestamp | date(format=\"%Y-%m-%d\") }}\n\n{% for group, commits in commits | group_by(attribute=\"group\") %}\n    ### {{ group | upper_first }}\n    {% for commit in commits %}\n        - {% if commit.breaking %}[**breaking**] {% endif %}{{ commit.message | upper_first }} by {{ commit.author.name }} [{{ commit.id| truncate(length=7, end=\"\")}}](https://github.com/carstencodes/pdm-bump/commit/{{ commit.id }}){% endfor %}\n{% endfor %}\n\n{% if version %}{% if previous %}**Full changelog**: [{{ previous.version }}...{{ version }}](https://github.com/carstencodes/pdm-bump/compare/{{ previous.version }}...{{ version }})\n{% endif %}\n\n{% endif %}"
trim = true
footer = "<!-- generated by git-cliff -->\n"

["pyproject.toml".tool.git-cliff.git]
conventional_commits = true
filter_unconventional = true
split_commits = false
commit_parsers = [
    { message = "^feat", group = "Features" },
    { message = "^fix", group = "Bug Fixes" },
    { message = "^doc", group = "Documentation" },
    { message = "^docs", group = "Documentation" },
    { message = "^perf", group = "Performance" },
    { message = "^refactor", group = "Refactored" },
    { message = "^style", group = "Styling" },
    { message = "^test", group = "Testing" },
    { message = "^qa", group = "Testing" },
    { message = "^chore\\(release\\): prepare for", skip = true },
    { message = "^ci", group = "Integration Tasks" },
    { message = "^build", group = "Build recipes" },
    { message = "^chore", group = "Miscellaneous Tasks" },
    { body = ".*security", group = "Security" },
]
protect_breaking_commits = false
filter_commits = false
tag_pattern = "v[0-9]*"
skip_tags = "v0.1.0-beta.1"
ignore_tags = ""
date_order = false
sort_commits = "oldest"

[["pyproject.toml".tool.git-cliff.git.commit_preprocessors]]
pattern = "\\((\\w+\\s)?#([0-9]+)\\)"
replace = "([#${2}](https://github.com/orhun/git-cliff/issues/${2}))"
